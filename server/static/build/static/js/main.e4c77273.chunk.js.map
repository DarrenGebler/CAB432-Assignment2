{"version":3,"sources":["components/AppSearchBar.js","containers/Home.js","App.js","reportWebVitals.js","index.js"],"names":["AppSearchBar","useState","useHistory","Box","sx","flexGrow","AppBar","position","Toolbar","Typography","variant","noWrap","component","display","xs","sm","Home","uploadFile","setUploadFile","open","setOpen","handleUpload","event","a","preventDefault","formData","FormData","append","files","axios","method","url","timeout","data","headers","then","response","error","console","log","fetch","name","blob","window","URL","createObjectURL","document","createElement","href","download","click","onSubmit","type","ref","accept","Backdrop","color","zIndex","theme","drawer","CircularProgress","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"uPAOe,SAASA,IAAgB,IAAD,EACOC,mBAAS,IADhB,6BAEnBC,cAUhB,OACI,cAACC,EAAA,EAAD,CAAKC,GAAI,CAACC,SAAU,GAApB,SACI,cAACC,EAAA,EAAD,CAAQC,SAAU,SAAlB,SACI,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CACIC,QAAS,KACTC,QAAM,EACNC,UAAW,MACXR,GAAI,CAAEC,SAAU,EAAGQ,QAAS,CAAEC,GAAI,OAAQC,GAAI,UAJlD,8C,uCChBL,SAASC,IAAQ,IAAD,EACSf,mBAAS,MADlB,mBACpBgB,EADoB,KACRC,EADQ,OAEHjB,oBAAS,GAFN,mBAEpBkB,EAFoB,KAEdC,EAFc,KAKrBC,EAAY,uCAAG,WAAOC,GAAP,eAAAC,EAAA,6DACjBD,EAAME,iBACNJ,GAAQ,IACFK,EAAW,IAAIC,UACZC,OAAO,OAAQV,EAAWW,MAAM,IAJxB,SAKXC,IAAM,CACRC,OAAQ,OACRC,IAAK,cACLC,QAAS,IACTC,KAAMR,EACNS,QAAS,CAAC,eAAgB,yBAC3BC,MAAK,SAAAC,GACJ,OAAOA,KACRD,MAAK,SAAAE,GACJC,QAAQC,IAAIF,MAdC,uBAgBXG,MAAM,UAAYvB,EAAWW,MAAM,GAAGa,MACvCN,MAAK,SAAAC,GACFA,EAASM,OAAOP,MAAK,SAAAO,GACjB,IAAIX,EAAMY,OAAOC,IAAIC,gBAAgBH,GACjCnB,EAAIuB,SAASC,cAAc,KAC/BxB,EAAEyB,KAAOjB,EACTR,EAAE0B,SAAWhC,EAAWW,MAAM,GAAGa,KACjClB,EAAE2B,cAvBG,OA0BjB9B,GAAQ,GA1BS,2CAAH,sDA6BlB,OACI,qCACI,cAACpB,EAAD,IACA,2DACA,uBAAMmD,SAAU9B,EAAcS,OAAO,OAArC,UACI,uBAAOsB,KAAM,OAAQC,IAAK,SAACA,GAASnC,EAAcmC,IAAQC,OAAQ,YAClE,uBAAOF,KAAM,cAEjB,cAACG,EAAA,EAAD,CAAUpC,KAAMA,EAAMf,GAAI,CAAEoD,MAAO,OAAQC,OAAQ,SAACC,GAAD,OAAWA,EAAMD,OAAOE,OAAS,IAApF,SACI,cAACC,EAAA,EAAD,CAAkBJ,MAAO,iBC3B1BK,MAjBf,WACI,OACI,8BACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAM,IAAnB,SACI,cAAC/C,EAAD,aCATgD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB/B,MAAK,YAAkD,IAA/CgC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF5B,SAAS6B,eAAe,SAM1BX,K","file":"static/js/main.e4c77273.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Box from \"@mui/material/Box\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nexport default function AppSearchBar() {\r\n    const [hashTagSearch, setHashTagSearch] = useState(\"\");\r\n    const history = useHistory();\r\n\r\n    const searchChange = (event) => {\r\n        setHashTagSearch(event.target.value);\r\n    }\r\n\r\n    const search = () => {\r\n        history.push(\"/search/\" + hashTagSearch);\r\n    }\r\n\r\n    return (\r\n        <Box sx={{flexGrow: 1}}>\r\n            <AppBar position={\"static\"}>\r\n                <Toolbar>\r\n                    <Typography\r\n                        variant={\"h6\"}\r\n                        noWrap\r\n                        component={\"div\"}\r\n                        sx={{ flexGrow: 1, display: { xs: 'none', sm: 'block' } }}\r\n                    >\r\n                        Social Distancing Analyser\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </Box>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport AppSearchBar from \"../components/AppSearchBar\";\r\nimport {CircularProgress} from \"@mui/material\";\r\nimport axios from 'axios';\r\nimport Backdrop from '@mui/material/Backdrop';\r\n\r\n\r\nexport default function Home() {\r\n    const [uploadFile, setUploadFile] = useState(null);\r\n    const [open, setOpen] = useState(false);\r\n\r\n\r\n    const handleUpload = async (event) => {\r\n        event.preventDefault();\r\n        setOpen(true);\r\n        const formData = new FormData();\r\n        formData.append('file', uploadFile.files[0]);\r\n        await axios({\r\n            method: 'POST',\r\n            url: '/video_data',\r\n            timeout: 200000,\r\n            data: formData,\r\n            headers: {'Content-Type': 'multipart/form-data'}\r\n        }).then(response => {\r\n            return response;\r\n        }).then(error => {\r\n            console.log(error);\r\n        });\r\n        await fetch(\"/video/\" + uploadFile.files[0].name)\r\n            .then(response => {\r\n                response.blob().then(blob => {\r\n                    let url = window.URL.createObjectURL(blob);\r\n                    let a = document.createElement('a');\r\n                    a.href = url;\r\n                    a.download = uploadFile.files[0].name;\r\n                    a.click();\r\n                })\r\n            });\r\n        setOpen(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <AppSearchBar/>\r\n            <h1>Submit Video for Analysis</h1>\r\n            <form onSubmit={handleUpload} method=\"post\">\r\n                <input type={\"file\"} ref={(ref) => {setUploadFile(ref);}} accept={\"video/*\"}/>\r\n                <input type={\"submit\"}/>\r\n            </form>\r\n            <Backdrop open={open} sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}>\r\n                <CircularProgress color={\"inherit\"}/>\r\n            </Backdrop>\r\n        </>\r\n    )\r\n}","import './App.css';\nimport React from \"react\";\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport Home from \"./containers/Home\";\nimport Error from \"./containers/Error\";\n\nfunction App() {\n    return (\n        <div>\n            <BrowserRouter>\n                <Switch>\n                    <Route exact path={\"/\"}>\n                        <Home/>\n                    </Route>\n                </Switch>\n                {/*<Switch>*/}\n                {/*    <Route path=\"/*\" component={Error}/>*/}\n                {/*</Switch>*/}\n            </BrowserRouter>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}